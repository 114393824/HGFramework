--
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
-- @generated
--


require 'Thrift'
require 'VIP_constants'

C2SPurchaseStamina = __TObject:new{

}

function C2SPurchaseStamina:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SPurchaseStamina:write(oprot)
  oprot:writeStructBegin('C2SPurchaseStamina')
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CPurchaseStamina = __TObject:new{
  curStamina,
  curStaminaLeftTimes,
  curDiamond
}

function S2CPurchaseStamina:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.curStamina = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curStaminaLeftTimes = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CPurchaseStamina:write(oprot)
  oprot:writeStructBegin('S2CPurchaseStamina')
  if self.curStamina then
    oprot:writeFieldBegin('curStamina', TType.I32, 1)
    oprot:writeI32(self.curStamina)
    oprot:writeFieldEnd()
  end
  if self.curStaminaLeftTimes then
    oprot:writeFieldBegin('curStaminaLeftTimes', TType.I32, 2)
    oprot:writeI32(self.curStaminaLeftTimes)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 3)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SPurchaseMoneyTree = __TObject:new{

}

function C2SPurchaseMoneyTree:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SPurchaseMoneyTree:write(oprot)
  oprot:writeStructBegin('C2SPurchaseMoneyTree')
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CPurchaseMoneyTree = __TObject:new{
  curMoneyTreeLeftTimes,
  curGold,
  curDiamond,
  crit
}

function S2CPurchaseMoneyTree:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.curMoneyTreeLeftTimes = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.DOUBLE then
        self.crit = iprot:readDouble()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CPurchaseMoneyTree:write(oprot)
  oprot:writeStructBegin('S2CPurchaseMoneyTree')
  if self.curMoneyTreeLeftTimes then
    oprot:writeFieldBegin('curMoneyTreeLeftTimes', TType.I32, 1)
    oprot:writeI32(self.curMoneyTreeLeftTimes)
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 2)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 3)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  if self.crit then
    oprot:writeFieldBegin('crit', TType.DOUBLE, 4)
    oprot:writeDouble(self.crit)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SPurchaseMoneyTreeTen = __TObject:new{

}

function C2SPurchaseMoneyTreeTen:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SPurchaseMoneyTreeTen:write(oprot)
  oprot:writeStructBegin('C2SPurchaseMoneyTreeTen')
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CPurchaseMoneyTreeTen = __TObject:new{
  curMoneyTreeLeftTimes,
  curGold,
  curDiamond,
  crits
}

function S2CPurchaseMoneyTreeTen:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.curMoneyTreeLeftTimes = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.LIST then
        self.crits = {}
        local _etype3, _size0 = iprot:readListBegin()
        for _i=1,_size0 do
          local _elem4 = iprot:readDouble()
          table.insert(self.crits, _elem4)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CPurchaseMoneyTreeTen:write(oprot)
  oprot:writeStructBegin('S2CPurchaseMoneyTreeTen')
  if self.curMoneyTreeLeftTimes then
    oprot:writeFieldBegin('curMoneyTreeLeftTimes', TType.I32, 1)
    oprot:writeI32(self.curMoneyTreeLeftTimes)
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 2)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 3)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  if self.crits then
    oprot:writeFieldBegin('crits', TType.LIST, 4)
    oprot:writeListBegin(TType.DOUBLE, #self.crits)
    for _,iter5 in ipairs(self.crits) do
      oprot:writeDouble(iter5)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SPurchaseSkillPoint = __TObject:new{

}

function C2SPurchaseSkillPoint:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SPurchaseSkillPoint:write(oprot)
  oprot:writeStructBegin('C2SPurchaseSkillPoint')
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CPurchaseSkillPoint = __TObject:new{
  curSkillPoint,
  curDiamond
}

function S2CPurchaseSkillPoint:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.curSkillPoint = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CPurchaseSkillPoint:write(oprot)
  oprot:writeStructBegin('S2CPurchaseSkillPoint')
  if self.curSkillPoint then
    oprot:writeFieldBegin('curSkillPoint', TType.I32, 1)
    oprot:writeI32(self.curSkillPoint)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 2)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SPurchaseEliteFB = __TObject:new{
  chapterId,
  levelId
}

function C2SPurchaseEliteFB:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.chapterId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.levelId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SPurchaseEliteFB:write(oprot)
  oprot:writeStructBegin('C2SPurchaseEliteFB')
  if self.chapterId then
    oprot:writeFieldBegin('chapterId', TType.STRING, 1)
    oprot:writeString(self.chapterId)
    oprot:writeFieldEnd()
  end
  if self.levelId then
    oprot:writeFieldBegin('levelId', TType.STRING, 2)
    oprot:writeString(self.levelId)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CPurchaseEliteFB = __TObject:new{
  chapterId,
  levelId,
  curDiamond,
  curFBPurchaseLeftTimes
}

function S2CPurchaseEliteFB:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.chapterId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.levelId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.I32 then
        self.curFBPurchaseLeftTimes = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CPurchaseEliteFB:write(oprot)
  oprot:writeStructBegin('S2CPurchaseEliteFB')
  if self.chapterId then
    oprot:writeFieldBegin('chapterId', TType.STRING, 1)
    oprot:writeString(self.chapterId)
    oprot:writeFieldEnd()
  end
  if self.levelId then
    oprot:writeFieldBegin('levelId', TType.STRING, 2)
    oprot:writeString(self.levelId)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 3)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  if self.curFBPurchaseLeftTimes then
    oprot:writeFieldBegin('curFBPurchaseLeftTimes', TType.I32, 4)
    oprot:writeI32(self.curFBPurchaseLeftTimes)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SPurchasePvpCount = __TObject:new{

}

function C2SPurchasePvpCount:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SPurchasePvpCount:write(oprot)
  oprot:writeStructBegin('C2SPurchasePvpCount')
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CPurchasePvpCount = __TObject:new{
  curDiamond,
  curPvpCount
}

function S2CPurchasePvpCount:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curPvpCount = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CPurchasePvpCount:write(oprot)
  oprot:writeStructBegin('S2CPurchasePvpCount')
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 1)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  if self.curPvpCount then
    oprot:writeFieldBegin('curPvpCount', TType.I32, 2)
    oprot:writeI32(self.curPvpCount)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end