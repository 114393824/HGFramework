--
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
-- @generated
--


require 'Thrift'
require 'shop_constants'

ChargeType = {
  diamond = 1,
  chargeCard = 2
}

ShopType = {
  Variety = 1,
  Profiteer = 2,
  Slaughter = 3,
  Guild = 4
}

C2SCharge = __TObject:new{
  chargeId,
  type
}

function C2SCharge:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.chargeId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SCharge:write(oprot)
  oprot:writeStructBegin('C2SCharge')
  if self.chargeId then
    oprot:writeFieldBegin('chargeId', TType.STRING, 1)
    oprot:writeString(self.chargeId)
    oprot:writeFieldEnd()
  end
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 2)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CCharge = __TObject:new{
  totalCahrgeRMB,
  curVipLevel,
  chargeId,
  type,
  curDiamond,
  curGold,
  curChargeCardDay
}

function S2CCharge:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.totalCahrgeRMB = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curVipLevel = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.STRING then
        self.chargeId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 5 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 6 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 7 then
      if ftype == TType.I32 then
        self.curChargeCardDay = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CCharge:write(oprot)
  oprot:writeStructBegin('S2CCharge')
  if self.totalCahrgeRMB then
    oprot:writeFieldBegin('totalCahrgeRMB', TType.I32, 1)
    oprot:writeI32(self.totalCahrgeRMB)
    oprot:writeFieldEnd()
  end
  if self.curVipLevel then
    oprot:writeFieldBegin('curVipLevel', TType.I32, 2)
    oprot:writeI32(self.curVipLevel)
    oprot:writeFieldEnd()
  end
  if self.chargeId then
    oprot:writeFieldBegin('chargeId', TType.STRING, 3)
    oprot:writeString(self.chargeId)
    oprot:writeFieldEnd()
  end
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 4)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 5)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 6)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  if self.curChargeCardDay then
    oprot:writeFieldBegin('curChargeCardDay', TType.I32, 7)
    oprot:writeI32(self.curChargeCardDay)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SSellItem = __TObject:new{
  sellItems
}

function C2SSellItem:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.LIST then
        self.sellItems = {}
        local _etype3, _size0 = iprot:readListBegin()
        for _i=1,_size0 do
          local _elem4 = ItemDTO:new{}
          _elem4:read(iprot)
          table.insert(self.sellItems, _elem4)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SSellItem:write(oprot)
  oprot:writeStructBegin('C2SSellItem')
  if self.sellItems then
    oprot:writeFieldBegin('sellItems', TType.LIST, 1)
    oprot:writeListBegin(TType.STRUCT, #self.sellItems)
    for _,iter5 in ipairs(self.sellItems) do
      iter5:write(oprot)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CSellItem = __TObject:new{
  costItems,
  curGold
}

function S2CSellItem:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.LIST then
        self.costItems = {}
        local _etype9, _size6 = iprot:readListBegin()
        for _i=1,_size6 do
          local _elem10 = ItemDTO:new{}
          _elem10:read(iprot)
          table.insert(self.costItems, _elem10)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CSellItem:write(oprot)
  oprot:writeStructBegin('S2CSellItem')
  if self.costItems then
    oprot:writeFieldBegin('costItems', TType.LIST, 1)
    oprot:writeListBegin(TType.STRUCT, #self.costItems)
    for _,iter11 in ipairs(self.costItems) do
      iter11:write(oprot)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 2)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SShopItem = __TObject:new{
  type,
  shopPoolId
}

function C2SShopItem:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.shopPoolId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SShopItem:write(oprot)
  oprot:writeStructBegin('C2SShopItem')
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 1)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  if self.shopPoolId then
    oprot:writeFieldBegin('shopPoolId', TType.STRING, 2)
    oprot:writeString(self.shopPoolId)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CShopItem = __TObject:new{
  type,
  shopPoolId,
  gainItem,
  curGold,
  curDiamond,
  curGuildCoin
}

function S2CShopItem:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.shopPoolId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.STRUCT then
        self.gainItem = ItemDTO:new{}
        self.gainItem:read(iprot)
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 5 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 6 then
      if ftype == TType.I32 then
        self.curGuildCoin = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CShopItem:write(oprot)
  oprot:writeStructBegin('S2CShopItem')
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 1)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  if self.shopPoolId then
    oprot:writeFieldBegin('shopPoolId', TType.STRING, 2)
    oprot:writeString(self.shopPoolId)
    oprot:writeFieldEnd()
  end
  if self.gainItem then
    oprot:writeFieldBegin('gainItem', TType.STRUCT, 3)
    self.gainItem:write(oprot)
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 4)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 5)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  if self.curGuildCoin then
    oprot:writeFieldBegin('curGuildCoin', TType.I32, 6)
    oprot:writeI32(self.curGuildCoin)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SShopAutoRefresh = __TObject:new{
  type
}

function C2SShopAutoRefresh:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SShopAutoRefresh:write(oprot)
  oprot:writeStructBegin('C2SShopAutoRefresh')
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 1)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CShopAutoRefresh = __TObject:new{
  type,
  shopPools,
  nextRefreshCDs
}

function S2CShopAutoRefresh:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.LIST then
        self.shopPools = {}
        local _etype15, _size12 = iprot:readListBegin()
        for _i=1,_size12 do
          local _elem16 = ShopPoolDTO:new{}
          _elem16:read(iprot)
          table.insert(self.shopPools, _elem16)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I32 then
        self.nextRefreshCDs = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CShopAutoRefresh:write(oprot)
  oprot:writeStructBegin('S2CShopAutoRefresh')
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 1)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  if self.shopPools then
    oprot:writeFieldBegin('shopPools', TType.LIST, 2)
    oprot:writeListBegin(TType.STRUCT, #self.shopPools)
    for _,iter17 in ipairs(self.shopPools) do
      iter17:write(oprot)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  if self.nextRefreshCDs then
    oprot:writeFieldBegin('nextRefreshCDs', TType.I32, 3)
    oprot:writeI32(self.nextRefreshCDs)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SShopManualRefresh = __TObject:new{
  type
}

function C2SShopManualRefresh:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SShopManualRefresh:write(oprot)
  oprot:writeStructBegin('C2SShopManualRefresh')
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 1)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CShopManualRefresh = __TObject:new{
  type,
  curGold,
  curDiamond,
  shopPools,
  refreshTimes,
  curGuildCoin
}

function S2CShopManualRefresh:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.LIST then
        self.shopPools = {}
        local _etype21, _size18 = iprot:readListBegin()
        for _i=1,_size18 do
          local _elem22 = ShopPoolDTO:new{}
          _elem22:read(iprot)
          table.insert(self.shopPools, _elem22)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    elseif fid == 5 then
      if ftype == TType.I32 then
        self.refreshTimes = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 6 then
      if ftype == TType.I32 then
        self.curGuildCoin = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CShopManualRefresh:write(oprot)
  oprot:writeStructBegin('S2CShopManualRefresh')
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 1)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 2)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 3)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  if self.shopPools then
    oprot:writeFieldBegin('shopPools', TType.LIST, 4)
    oprot:writeListBegin(TType.STRUCT, #self.shopPools)
    for _,iter23 in ipairs(self.shopPools) do
      iter23:write(oprot)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  if self.refreshTimes then
    oprot:writeFieldBegin('refreshTimes', TType.I32, 5)
    oprot:writeI32(self.refreshTimes)
    oprot:writeFieldEnd()
  end
  if self.curGuildCoin then
    oprot:writeFieldBegin('curGuildCoin', TType.I32, 6)
    oprot:writeI32(self.curGuildCoin)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SPersistShop = __TObject:new{
  type
}

function C2SPersistShop:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SPersistShop:write(oprot)
  oprot:writeStructBegin('C2SPersistShop')
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 1)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CPersistShop = __TObject:new{
  type,
  curDiamond,
  shopPools,
  nextAutoRefreshCDs
}

function S2CPersistShop:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curDiamond = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.LIST then
        self.shopPools = {}
        local _etype27, _size24 = iprot:readListBegin()
        for _i=1,_size24 do
          local _elem28 = ShopPoolDTO:new{}
          _elem28:read(iprot)
          table.insert(self.shopPools, _elem28)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.I32 then
        self.nextAutoRefreshCDs = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CPersistShop:write(oprot)
  oprot:writeStructBegin('S2CPersistShop')
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 1)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  if self.curDiamond then
    oprot:writeFieldBegin('curDiamond', TType.I32, 2)
    oprot:writeI32(self.curDiamond)
    oprot:writeFieldEnd()
  end
  if self.shopPools then
    oprot:writeFieldBegin('shopPools', TType.LIST, 3)
    oprot:writeListBegin(TType.STRUCT, #self.shopPools)
    for _,iter29 in ipairs(self.shopPools) do
      iter29:write(oprot)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  if self.nextAutoRefreshCDs then
    oprot:writeFieldBegin('nextAutoRefreshCDs', TType.I32, 4)
    oprot:writeI32(self.nextAutoRefreshCDs)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end