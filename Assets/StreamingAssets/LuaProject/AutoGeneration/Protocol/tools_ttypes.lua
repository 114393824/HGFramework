--
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
-- @generated
--


require 'Thrift'
require 'tools_constants'

InfoType = {
  UserInfo = 1,
  SummonerInfo = 2,
  HeroInfo = 3,
  WeaponInfo = 4,
  ArmorInfo = 5,
  UserAllInfo = 6,
  SummonerAllInfo = 7
}

C2SGetInfo = __TObject:new{
  id,
  type
}

function C2SGetInfo:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.id = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.type = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SGetInfo:write(oprot)
  oprot:writeStructBegin('C2SGetInfo')
  if self.id then
    oprot:writeFieldBegin('id', TType.STRING, 1)
    oprot:writeString(self.id)
    oprot:writeFieldEnd()
  end
  if self.type then
    oprot:writeFieldBegin('type', TType.I32, 2)
    oprot:writeI32(self.type)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CGetInfo = __TObject:new{
  jsonStrs
}

function S2CGetInfo:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.LIST then
        self.jsonStrs = {}
        local _etype3, _size0 = iprot:readListBegin()
        for _i=1,_size0 do
          local _elem4 = iprot:readString()
          table.insert(self.jsonStrs, _elem4)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CGetInfo:write(oprot)
  oprot:writeStructBegin('S2CGetInfo')
  if self.jsonStrs then
    oprot:writeFieldBegin('jsonStrs', TType.LIST, 1)
    oprot:writeListBegin(TType.STRING, #self.jsonStrs)
    for _,iter5 in ipairs(self.jsonStrs) do
      oprot:writeString(iter5)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end