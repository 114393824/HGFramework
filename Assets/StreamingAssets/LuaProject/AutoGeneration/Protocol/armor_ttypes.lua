--
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
-- @generated
--


require 'Thrift'
require 'armor_constants'

C2SArmorIncrLevel = __TObject:new{
  heroId,
  armorId
}

function C2SArmorIncrLevel:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.heroId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.armorId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SArmorIncrLevel:write(oprot)
  oprot:writeStructBegin('C2SArmorIncrLevel')
  if self.heroId then
    oprot:writeFieldBegin('heroId', TType.STRING, 1)
    oprot:writeString(self.heroId)
    oprot:writeFieldEnd()
  end
  if self.armorId then
    oprot:writeFieldBegin('armorId', TType.STRING, 2)
    oprot:writeString(self.armorId)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CArmorIncrLevel = __TObject:new{
  hero,
  curGold,
  costItem
}

function S2CArmorIncrLevel:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRUCT then
        self.hero = HeroDTO:new{}
        self.hero:read(iprot)
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.STRUCT then
        self.costItem = ItemDTO:new{}
        self.costItem:read(iprot)
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CArmorIncrLevel:write(oprot)
  oprot:writeStructBegin('S2CArmorIncrLevel')
  if self.hero then
    oprot:writeFieldBegin('hero', TType.STRUCT, 1)
    self.hero:write(oprot)
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 2)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  if self.costItem then
    oprot:writeFieldBegin('costItem', TType.STRUCT, 3)
    self.costItem:write(oprot)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SArmorIncrQuality = __TObject:new{
  heroId,
  armorId
}

function C2SArmorIncrQuality:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.heroId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.armorId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SArmorIncrQuality:write(oprot)
  oprot:writeStructBegin('C2SArmorIncrQuality')
  if self.heroId then
    oprot:writeFieldBegin('heroId', TType.STRING, 1)
    oprot:writeString(self.heroId)
    oprot:writeFieldEnd()
  end
  if self.armorId then
    oprot:writeFieldBegin('armorId', TType.STRING, 2)
    oprot:writeString(self.armorId)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CArmorIncrQuality = __TObject:new{
  hero,
  curGold,
  cost
}

function S2CArmorIncrQuality:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRUCT then
        self.hero = HeroDTO:new{}
        self.hero:read(iprot)
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.LIST then
        self.cost = {}
        local _etype3, _size0 = iprot:readListBegin()
        for _i=1,_size0 do
          local _elem4 = ItemDTO:new{}
          _elem4:read(iprot)
          table.insert(self.cost, _elem4)
        end
        iprot:readListEnd()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CArmorIncrQuality:write(oprot)
  oprot:writeStructBegin('S2CArmorIncrQuality')
  if self.hero then
    oprot:writeFieldBegin('hero', TType.STRUCT, 1)
    self.hero:write(oprot)
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 2)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  if self.cost then
    oprot:writeFieldBegin('cost', TType.LIST, 3)
    oprot:writeListBegin(TType.STRUCT, #self.cost)
    for _,iter5 in ipairs(self.cost) do
      iter5:write(oprot)
    end
    oprot:writeListEnd()
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

C2SArmorOneKeyIncrLvl = __TObject:new{
  heroId,
  armorId,
  lvl
}

function C2SArmorOneKeyIncrLvl:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.heroId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.armorId = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I32 then
        self.lvl = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function C2SArmorOneKeyIncrLvl:write(oprot)
  oprot:writeStructBegin('C2SArmorOneKeyIncrLvl')
  if self.heroId then
    oprot:writeFieldBegin('heroId', TType.STRING, 1)
    oprot:writeString(self.heroId)
    oprot:writeFieldEnd()
  end
  if self.armorId then
    oprot:writeFieldBegin('armorId', TType.STRING, 2)
    oprot:writeString(self.armorId)
    oprot:writeFieldEnd()
  end
  if self.lvl then
    oprot:writeFieldBegin('lvl', TType.I32, 3)
    oprot:writeI32(self.lvl)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

S2CArmorOneKeyIncrLvl = __TObject:new{
  hero,
  curGold,
  costItem
}

function S2CArmorOneKeyIncrLvl:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRUCT then
        self.hero = HeroDTO:new{}
        self.hero:read(iprot)
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.I32 then
        self.curGold = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.STRUCT then
        self.costItem = ItemDTO:new{}
        self.costItem:read(iprot)
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function S2CArmorOneKeyIncrLvl:write(oprot)
  oprot:writeStructBegin('S2CArmorOneKeyIncrLvl')
  if self.hero then
    oprot:writeFieldBegin('hero', TType.STRUCT, 1)
    self.hero:write(oprot)
    oprot:writeFieldEnd()
  end
  if self.curGold then
    oprot:writeFieldBegin('curGold', TType.I32, 2)
    oprot:writeI32(self.curGold)
    oprot:writeFieldEnd()
  end
  if self.costItem then
    oprot:writeFieldBegin('costItem', TType.STRUCT, 3)
    self.costItem:write(oprot)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end